@import "base/reset";
@import "base/colors";
@import "base/typography";
@import "abstracts/mixins";
@import "abstracts/themes";

// THEMES:

// variable $themes is an object, has many different key-value pairs. Values may consist of several css-atributes.

// Set of colors for nav- and add- buttons:

$themes: (
  theme0: (
    background-color: $navButtonColor1,
    color: white,
  ),
  theme1: (
    background-color: $navButtonColor1,
    color: white,
  ),
  theme2: (
    background-color: lightblue,
    color: black,
  ),
  theme3: (
    background-color: blue,
    color: white,
  ),
  theme4: (
    background-color: black,
    color: white,
  ),
  theme5: (
    background-color: gray,
    color: white,
  ),
  theme6: (
    background-color: green,
    color: white,
  ),
  theme7: (
    background-color: lightgreen,
    color: black,
  ),
  theme8: (
    background-color: yellow,
    color: black,
  ),
  theme9: (
    background-color: orange,
    color: black,
  ),
  theme10: (
    background-color: red,
    color: white,
  ),
  theme11: (
    background-color: darkred,
    color: white,
  ),
  theme12: (
    background-color: white,
    color: black,
  ),
);

// Set of colors for Remove-buttons:

$themes2: (
  theme0: (
    background-color: violet,
    color: white,
  ),
  theme1: (
    background-color: violet,
    color: white,
  ),
  theme2: (
    background-color: lightblue,
    color: black,
  ),
  theme3: (
    background-color: blue,
    color: white,
  ),
  theme4: (
    background-color: black,
    color: white,
  ),
  theme5: (
    background-color: gray,
    color: white,
  ),
  theme6: (
    background-color: rgb(3, 73, 3),
    color: white,
  ),
  theme7: (
    background-color: lightgreen,
    color: black,
  ),
  theme8: (
    background-color: yellow,
    color: black,
  ),
  theme9: (
    background-color: orange,
    color: black,
  ),
  theme10: (
    background-color: red,
    color: white,
  ),
  theme11: (
    background-color: darkred,
    color: white,
  ),
  theme12: (
    background-color: white,
    color: black,
  ),
);

$backgrounds: (
  theme0: url("../pictures/spiral.jpg"),
  theme1: url("../pictures/blue_vibe.jpg"),
  theme2: url("../pictures/blue-water-pool.jpg"),
  theme3: url("../pictures/ocean.jpg"),
  theme4: url("../pictures/triangular-neon-laser.jpg"),
  theme5: url("../pictures/volcano.jpg"),
  theme6: url("../pictures/green-abstract.jpg"),
  theme7: url("../pictures/green-triangles.jpg"),
  theme8: url("../pictures/gold.jpg"),
  theme9: url("../pictures/orange-green.jpg"),
  theme10: url("../pictures/red-triangles.jpg"),
  theme11: url("../pictures/violet.jpg"),
  theme12: url("../pictures/frost.jpg"),
);

body {
  color: $fontColor1;
  font-family: $sans-serif1;
  text-shadow: 2px 2px 4px $textShadowColor1;
  // background-image: url("../pictures/energy-violet.jpg");
  // background-image: $backgrounds;
  background-repeat: repeat;
  background-size: 100%;
}

// Navbar (header id="navigation" class="red"):

.red {
  @include flex-container();
  height: 120px;
}

// all children elements of header, which has class .red:
.red > * {
  padding: 0 10px 10px;
}

#navbar {
  flex-basis: 80%;
}

#navigation {
  @include navigation-position();
  @include navigation-design();
}

#top-icon {
  flex-basis: 5%;
}

#nav-title {
  font-family: $sans-serif2;
  color: $fontColor1;
  @include nav-title();
  flex-basis: 12%;
}

#nav-list {
  list-style-type: none;
  text-align: right;

  button {
    @include button-style();
    @include navbar-button();

    // &:last-child {
    //   margin-right: 50px;
    // }
    &:hover {
      background-color: $hoverColor1;
    }
    a {
      @include nav-ancor-text();

      &:hover {
        @include button-hover();
      }
    }
  }
}

select {
  @include button-style();
  @include navbar-button();
  @include submit-button();
  // -webkit-appearance: none;
  // -moz-appearance: none;
  display: inline-block;
  // appearance: none;
  border-radius: 30px;
  width: 12%;
  padding: 5px 10px 5px 10px;
  // background-color: $navButtonColor1;
  color: $fontColor1;
  font-weight: bold;
  text-shadow: 2px 2px 4px $textShadowColor1;
  font-family: $sans-serif1;
  text-align: center;

  &:hover {
    @include button-hover();
  }
}

select {
  option {
    color: $fontColor1;
  }
}

.option {
  font-size: 0.9rem;
  background-color: $inputColor1;
  border-radius: 30px;
  // opacity: 0.8 !important;
}

#theme-color option {
  opacity: 0.8 !important;
}

// option:hover {
//   color: $inputColor1;
//   border-radius: 30px;
//   opacity: 0.8;
// }

#app-icon {
  text-align: center;
}

// h1,
// h2 {
//   margin-top: 10%;
// }

// form:

.flex-container {
  @include flex-container();
  align-items: center;
  width: 80%;
  margin: 10%;
  height: 20%;
}
/* if height in vh: 20vh is used, it doesn't scale well, if too many elements added to the list (lower flex-container), 
    they won't fit anymore to a fixed vh-height, but will be overlapping into upper flex-container.
    Better to use percentage for containers inside the page, then the page will grow larger if needed - scrollable, 
    as long as alements are added to the list, but they will always fit into their container.
 */

#first-container {
  border-radius: 30px;
}

#form {
  @include form-design();
}

.visible-title1 {
  padding: 0.1%;
  margin: 5% 35%;
  border-radius: 30px;
  background: rgba(0, 0, 0, 0.655);
  // background: rgba(230, 227, 227, 0.655);

  // to have div transparent, but text inside of it fully visible - rgba with transparent effect:
  // background-color: #041e2684;
  // background: radial-gradient(at 25% 75%, #5d0e41, rgba(77, 148, 255, 0));
  color: $fontColor1;
  box-shadow: 5px 5px 3px #ca3535;
}

.visible-title2 {
  padding: 0.1%;
  margin: 5% 35%;
  border-radius: 30px;
  // margin: 30%;
  background: rgba(0, 0, 0, 0.655);
  // background: rgba(230, 227, 227, 0.655);
  color: $fontColor1;
  box-shadow: 5px 5px 3px #ca3535;
}

.formViolet {
  background: radial-gradient(at 25% 75%, #5d0e41, rgba(77, 148, 255, 0));
  color: $fontColor1;
}

.formBlue {
  background: radial-gradient(at 25% 75%, #0f4d5f, rgba(77, 148, 255, 0));
  color: $fontColor1;
}

.formBlack {
  background: rgba(0, 0, 0, 0.655);
  color: $fontColor1;
}

input {
  @include input-field();

  &:hover {
    background-color: $hoverColor1;
    color: $textShadowColor1;
  }
}

p {
  padding: 2% 0;
}

/* input field for a numeric rate (smaller than others) */
#review {
  width: 7rem;
}

// submit-button:
button {
  @include submit-button();
  @include button-style();

  &:hover {
    @include button-hover();
  }
}

// .button {
//   background-color: $navButtonColor1;
// }

.buttonWater {
  background-color: $buttonWater;
}

ul {
  list-style-type: none;
  padding-inline-start: 0;
  margin-top: 5%;
}

li {
  flex-basis: 80%;
}

.whiteParagraph {
  color: $paragraphColor;
  @include list-paragraph();
}

.blackParagraph {
  color: $inputColor1;
  @include list-paragraph();
}

.whiteText {
  color: $fontColor1;
  @include white-todos();
}

.blackText {
  color: $textShadowColor1;
  @include white-todos();
}

#results {
  margin: 2% auto;
}

hr {
  width: 70%;
}

.favorite-button,
.remove-button {
  @include button-style();
  @include fav-and-remove-button();

  &:hover {
    @include button-hover();
  }
}

.removeButtonWater {
  background-color: $inputColor1;
}

#new-title {
  display: none;
}

@include columns();

.water {
  // for .select:
  background-color: $paragraphColor;
}

// THEME MODULES:

// On each loop, assign these values to $theme and $map:
// module-name is a placeholder, should be replaced with any html-element: div, navbar, card, button etc - a container whose style we want to change.
// in html, we use naming like this :<div class="theme1 navbar">...</div>
// The & refers to parent selectors, and placing it after .#{$theme} tells Sass to output any parent selectors after the theme name:

// .module-name {
//   @each $theme, $map in $themes {
//     .#{$theme} & {
//       color: map-get($map, color);
//       background-color: map-get($map, background-color);
//       font-size: map-get($map, font-size);
//     }
//   }
// }

// .module-name {
//   h1 {
//     @each $theme, $map in $themes {
//       .#{$theme} & {
//         color: map-get($map, color);
//       }
//     }
//   }
// }

/* CSS */
// .theme1 .module-name h1 { color: red; }
// .theme2 .module-name h1 { color: orange; }
// .theme3 .module-name h1 { color: yellow; }
// .theme4 .module-name h1 { color: green; }
// .theme5 .module-name h1 { color: blue; }

// <body class="theme7">
// <button class="button nav-button theme7"><a href="index.html">Home</a></button>
// <button type="button" class="favorite-button button flex-item theme7">Add to favorites</button>

// PAGE-BACKGROUND:

// &.#{$theme} - current element
// .#{$theme} & { - parent element gets the class

body {
  @each $theme, $background in $backgrounds {
    &.#{$theme} {
      background-image: $background !important;
    }
  }
}

// FOR NAV-BUTTONS (html) AND ADD-BUTTONS (JS-file):

// .nav-button {
//   @each $theme, $map in $themes {
//     .#{$theme} & {
//       background-color: map-get($map, background-color);
//       color: map-get($map, color);
//     }
//   }
// }

// .favorite-button {
//   @each $theme, $map in $themes {
//     .#{$theme} & {
//       background-color: map-get($map, background-color);
//       color: map-get($map, color);
//     }
//   }
// }

.theme-button {
  @each $theme, $map in $themes {
    .#{$theme} & {
      background-color: map-get($map, background-color);
      color: map-get($map, color);
    }
  }
}

// Apply 1 scss-module to several classes (these classes/id-s/elements have to be all targeted in JS, in order to apply themes on them):
.nav-button,
.favorite-button,
#theme_color,
option {
  @extend .theme-button;
}

// FOR REMOVE-BUTTONS (JS-file):

.remove-button {
  @each $theme, $map in $themes2 {
    .#{$theme} & {
      background-color: map-get($map, background-color);
      color: map-get($map, color);
    }
  }
}

// dodati boje ovisno o temama za div-ove koji su containeri za naslove, i za form, za input polja, a možda i za navbar pozadinsku boju
// i sukladno tome, ime aplikacije u lijevom gornjem kutu

// podebljani tekst označiti istom bojom kao i slova buttona, a obični tekst nekom sličnom ali jednostavnijom bojom

// kasnije sve teme spremiti u zaseban file, npr. _themes.scss i importati u ovaj file

// MEDIA QUERIES:

@media (max-width: 1540px) {
  #nav-list button:last-child {
    margin-right: 150px;
  }

  #nav-list button {
    margin: 0 40px;
  }
  select {
    width: 12%;
  }
}

@media (max-width: 1150px) {
  #nav-list button:last-child {
    margin-right: 70px;
  }

  #nav-list button {
    margin: 0 20px;
  }
  select {
    width: 15%;
  }
}

@media (max-width: 1113px) {
  #nav-list button,
  select {
    width: 15%;
  }
}

@media (max-width: 1056px) {
  li {
    flex-basis: 90%;
  }
  li p {
    padding: 2% 0;
  }
}

@media (max-width: 989px) {
  .red {
    height: 200px;
  }
  #nav-title {
    font-size: 1.4rem;
  }
}

/* so that 'Rate (1-10)' doesn't break in 2 rows */
@media (max-width: 956px) {
  body {
    font-size: 1rem;
  }
  #review {
    width: 6rem;
  }
  #nav-list button,
  select {
    width: 8rem;
    height: 3rem;
  }
}

@media (max-width: 908px) {
  #nav-title {
    font-size: 1.4rem;
  }
  #nav-list button,
  select {
    width: 8rem;
    height: 3rem;
  }
}

@media (max-width: 900px) {
  #nav-list button,
  select {
    width: 14%;
  }
}

@media (max-width: 880px) {
  #nav-list button:last-child {
    margin-right: 15px;
  }

  #nav-list button,
  select {
    margin: 0 15px;
    width: 8rem;
    height: 3rem;
  }

  #nav-title {
    font-size: 1.4rem;
  }
}

@media (max-width: 840px) {
  #nav-list button,
  select {
    margin: 0 10px;
    width: 8rem;
    height: 3rem;
  }

  #nav-title {
    font-size: 1.2rem;
    flex-basis: 90%;
  }

  .remove-button {
    margin: 3%;
  }
}

@media (max-width: 786px) {
  body {
    font-size: 1rem;
  }

  .flex-item {
    flex-basis: 70%;
    margin: 1% auto;
  }

  .flex-container {
    height: 45%;
    width: 85%;
    margin: 5% auto;
    align-content: center;
  }

  .red {
    height: 200px;
  }

  #nav-list button,
  select {
    width: 35%;
  }

  #navbar {
    width: 100%;
  }

  button,
  input {
    width: 60%;
  }

  button {
    margin-top: 5%;
    margin-bottom: 10%;
    padding: 0%;
  }

  .remove-button {
    margin: 3%;
  }

  li p {
    padding: 2%;
    display: block;
  }

  #first-container {
    margin-bottom: 15%;
  }

  #empty {
    display: none;
  }
}
